@using ActiveStudy.Domain.Crm.Identity
@model ActiveStudy.Web.Areas.Crm.Models.Classes.ClassViewModel
@inject IHtmlLocalizer<SharedResource> sharedLocalizer;
@inject IViewLocalizer localizer
@inject IAccessResolver accessResolver

@{
    ViewData["Title"] = $"{Model.Title} | {Model.School.Title}";

    var breadcrumb = new List<BreadcrumbItem>
    {
        BreadcrumbItem.Active(sharedLocalizer["Schools"].Value, Url.Action("List", "School")),
        BreadcrumbItem.Active(Model.School.Title, Url.Action("Details", "School", new {id = Model.School.Id})),
        BreadcrumbItem.Active(sharedLocalizer["Classes"].Value, Url.Action("List", "Classes", new {schoolId = Model.School.Id})),
        BreadcrumbItem.InActive(Model.Title)
    };
}

<vc:breadcrumb items="@breadcrumb" />
@if (await accessResolver.HasReadAccessAsync(User, Model.School.Id, Sections.Students))
{
    <a asp-controller="Classes"
       asp-action="Students"
       asp-route-schoolId="@Model.School.Id"
       asp-route-id="@Model.Id">
        @sharedLocalizer["Students"]
    </a>
}
@if (await accessResolver.HasFullAccessAsync(User, Model.School.Id, Sections.Classes))
{
    <a asp-controller="Classes"
       asp-action="CreateScheduleTemplate"
       asp-route-schoolId="@Model.School.Id"
       asp-route-id="@Model.Id">
        Edit schedule
    </a>
}
<vc:scheduler schedule="@Model.Schedule"
              school-id="@Model.School.Id"
              class-id="@Model.Id"
              teacher-id="@null">
</vc:scheduler>
