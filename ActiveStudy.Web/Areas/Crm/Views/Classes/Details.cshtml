@using ActiveStudy.Domain.Crm.Identity
@model ActiveStudy.Web.Areas.Crm.Models.Classes.ClassViewModel
@inject IHtmlLocalizer<SharedResource> sharedLocalizer;
@inject IViewLocalizer localizer
@inject IAccessResolver accessResolver

@{
    ViewData["Title"] = $"{Model.Title} | {Model.School.Title}";

    var breadcrumb = new List<BreadcrumbItem>
    {
        BreadcrumbItem.Active(sharedLocalizer["Schools"].Value, Url.Action("List", "School")),
        BreadcrumbItem.Active(Model.School.Title, Url.Action("Details", "School", new {id = Model.School.Id})),
        BreadcrumbItem.Active(sharedLocalizer["Classes"].Value, Url.Action("List", "Classes", new {schoolId = Model.School.Id})),
        BreadcrumbItem.InActive(Model.Title)
    };
}

<vc:breadcrumb items="@breadcrumb" />
@* @if (await accessResolver.HasReadAccessAsync(User, Model.School.Id, Sections.Students)) *@
@* { *@
@*     <a asp-controller="Classes" *@
@*        asp-action="Students" *@
@*        asp-route-schoolId="@Model.School.Id" *@
@*        asp-route-id="@Model.Id"> *@
@*         @sharedLocalizer["Students"] *@
@*     </a> *@
@* } *@
<table class="table">
    <tr>
        <th></th>
        @foreach (var dayOfWeek in Model.Schedule.Keys)
        {
            <th>@dayOfWeek.ToString()</th>
        }
    </tr>
    @foreach (var (timeSlot, _) in Model.Schedule.EducationPeriod.Lessons)
    {
        <tr>
            <td>@Model.Schedule.EducationPeriod.Lessons[timeSlot].Start.ToString("hh\\:mm") - @Model.Schedule.EducationPeriod.Lessons[timeSlot].End.ToString("hh\\:mm")</td>
            
            @foreach (var (_, lessons) in Model.Schedule)
            {
                if (lessons.ContainsKey(timeSlot) && lessons[timeSlot] != null)
                {
                    <td>@lessons[timeSlot].Class.Title, @lessons[timeSlot].Subject.Title, @lessons[timeSlot].Teacher.FullName</td>
                }
                else
                {
                    <td>-</td>
                }
            }
        </tr>
    }
</table>
